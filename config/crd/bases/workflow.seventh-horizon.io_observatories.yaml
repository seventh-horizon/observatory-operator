---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: observatories.workflow.seventh-horizon.io
spec:
  group: workflow.seventh-horizon.io
  names:
    kind: Observatory
    listKind: ObservatoryList
    plural: observatories
    shortNames:
    - obs
    singular: observatory
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    - jsonPath: .spec.tasks[*].name
      name: Tasks
      type: integer
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Observatory is the Schema for the observatories API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ObservatorySpec defines the desired state of Observatory
            properties:
              maxConcurrent:
                default: 10
                description: MaxConcurrent defines the maximum number of concurrent
                  task executions
                format: int32
                minimum: 1
                type: integer
              schedule:
                description: Schedule defines when the workflow should run (optional,
                  cron format)
                type: string
              suspend:
                default: false
                description: Suspend indicates if the workflow execution should be
                  suspended
                type: boolean
              tasks:
                description: Tasks defines the list of tasks in the workflow DAG
                items:
                  description: TaskSpec defines a single task in the workflow DAG
                  properties:
                    args:
                      description: Args are the arguments to pass to the command
                      items:
                        type: string
                      type: array
                    command:
                      description: Command to run in the container
                      items:
                        type: string
                      type: array
                    dependencies:
                      description: Dependencies lists task names that must complete
                        before this task runs
                      items:
                        type: string
                      type: array
                    env:
                      description: Env are environment variables to set in the container
                      items:
                        description: EnvVar represents an environment variable
                        properties:
                          name:
                            description: Name of the environment variable
                            type: string
                          value:
                            description: Value of the environment variable
                            type: string
                        required:
                        - name
                        type: object
                      type: array
                    image:
                      description: Image is the container image to run for this task
                      type: string
                    name:
                      description: Name is the unique identifier for this task
                      type: string
                  required:
                  - image
                  - name
                  type: object
                minItems: 1
                type: array
            required:
            - tasks
            type: object
          status:
            description: ObservatoryStatus defines the observed state of Observatory
            properties:
              completionTime:
                description: CompletionTime is when the workflow completed
                format: date-time
                type: string
              conditions:
                description: Conditions represent the latest available observations
                  of the Observatory's state
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              lastScheduleTime:
                description: LastScheduleTime is the last time the workflow was scheduled
                format: date-time
                type: string
              phase:
                description: Phase represents the current phase of the workflow (Pending,
                  Running, Succeeded, Failed)
                type: string
              startTime:
                description: StartTime is when the workflow started execution
                format: date-time
                type: string
              tasks:
                description: Tasks contains the status of individual tasks
                items:
                  description: TaskStatus represents the status of a single task
                  properties:
                    completionTime:
                      description: CompletionTime is when the task completed
                      format: date-time
                      type: string
                    message:
                      description: Message provides additional details about the task
                        status
                      type: string
                    name:
                      description: Name of the task
                      type: string
                    phase:
                      description: Phase of the task (Pending, Running, Succeeded,
                        Failed)
                      type: string
                    startTime:
                      description: StartTime is when the task started execution
                      format: date-time
                      type: string
                  required:
                  - name
                  - phase
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
